<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:dop="http://obinexus.org/dop/v1.0"
           targetNamespace="http://obinexus.org/dop/v1.0"
           elementFormDefault="qualified">

  <!-- Root Element: DOP Component Manifest -->
  <xs:element name="dop_manifest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="metadata" type="dop:manifestMetadata"/>
        <xs:element name="build_topology" type="dop:buildTopology"/>
        <xs:element name="components" type="dop:componentList"/>
        <xs:element name="governance" type="dop:governanceConfig"/>
        <xs:element name="cryptographic_verification" type="dop:cryptoVerification"/>
      </xs:sequence>
      <xs:attribute name="schema_version" type="xs:string" fixed="1.0.0"/>
      <xs:attribute name="manifest_id" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>

  <!-- Manifest Metadata -->
  <xs:complexType name="manifestMetadata">
    <xs:sequence>
      <xs:element name="build_id" type="xs:string"/>
      <xs:element name="creation_timestamp" type="xs:dateTime"/>
      <xs:element name="last_update_timestamp" type="xs:dateTime"/>
      <xs:element name="creator" type="xs:string"/>
      <xs:element name="version" type="xs:string"/>
      <xs:element name="nnam_id" type="xs:string"/>
      <xs:element name="build_target" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Build Topology Configuration -->
  <xs:complexType name="buildTopology">
    <xs:sequence>
      <xs:element name="topology_type" type="dop:topologyType"/>
      <xs:element name="fault_tolerance" type="xs:boolean"/>
      <xs:element name="p2p_enabled" type="xs:boolean"/>
      <xs:element name="max_nodes" type="xs:positiveInteger"/>
      <xs:element name="network_configuration" type="dop:networkConfig"/>
      <xs:element name="nodes" type="dop:nodeList"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Topology Types -->
  <xs:simpleType name="topologyType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="P2P"/>
      <xs:enumeration value="BUS"/>
      <xs:enumeration value="STAR"/>
      <xs:enumeration value="RING"/>
      <xs:enumeration value="MESH"/>
      <xs:enumeration value="HYBRID"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Network Configuration -->
  <xs:complexType name="networkConfig">
    <xs:sequence>
      <xs:element name="communication_protocol" type="xs:string"/>
      <xs:element name="encryption_enabled" type="xs:boolean"/>
      <xs:element name="timeout_ms" type="xs:positiveInteger"/>
      <xs:element name="retry_count" type="xs:nonNegativeInteger"/>
      <xs:element name="heartbeat_interval_ms" type="xs:positiveInteger"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Node List -->
  <xs:complexType name="nodeList">
    <xs:sequence>
      <xs:element name="node" type="dop:topologyNode" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Topology Node -->
  <xs:complexType name="topologyNode">
    <xs:sequence>
      <xs:element name="node_id" type="xs:string"/>
      <xs:element name="component_ref" type="xs:string"/>
      <xs:element name="peer_connections" type="dop:peerConnections"/>
      <xs:element name="is_fault_tolerant" type="xs:boolean"/>
      <xs:element name="load_balancing_weight" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Peer Connections -->
  <xs:complexType name="peerConnections">
    <xs:sequence>
      <xs:element name="peer" type="xs:string" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Component List -->
  <xs:complexType name="componentList">
    <xs:sequence>
      <xs:element name="component" type="dop:component" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Component Definition -->
  <xs:complexType name="component">
    <xs:sequence>
      <xs:element name="component_id" type="xs:string"/>
      <xs:element name="component_name" type="xs:string"/>
      <xs:element name="component_type" type="dop:componentType"/>
      <xs:element name="version" type="xs:string"/>
      <xs:element name="state" type="dop:componentState"/>
      <xs:element name="gate_state" type="dop:gateState"/>
      <xs:element name="data_model" type="dop:dataModel"/>
      <xs:element name="behavior_interface" type="dop:behaviorInterface"/>
      <xs:element name="integrity_checksum" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Component Types -->
  <xs:simpleType name="componentType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALARM"/>
      <xs:enumeration value="CLOCK"/>
      <xs:enumeration value="STOPWATCH"/>
      <xs:enumeration value="TIMER"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Component States -->
  <xs:simpleType name="componentState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNINITIALIZED"/>
      <xs:enumeration value="READY"/>
      <xs:enumeration value="EXECUTING"/>
      <xs:enumeration value="SUSPENDED"/>
      <xs:enumeration value="ERROR"/>
      <xs:enumeration value="DESTROYED"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Gate States -->
  <xs:simpleType name="gateState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="CLOSED"/>
      <xs:enumeration value="OPEN"/>
      <xs:enumeration value="ISOLATED"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Data Model -->
  <xs:complexType name="dataModel">
    <xs:sequence>
      <xs:element name="immutable_data" type="xs:boolean"/>
      <xs:element name="transparent_structure" type="xs:boolean"/>
      <xs:element name="validation_rules" type="dop:validationRules"/>
      <xs:element name="serialization_format" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Validation Rules -->
  <xs:complexType name="validationRules">
    <xs:sequence>
      <xs:element name="rule" type="dop:validationRule" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Validation Rule -->
  <xs:complexType name="validationRule">
    <xs:sequence>
      <xs:element name="field_name" type="xs:string"/>
      <xs:element name="rule_type" type="xs:string"/>
      <xs:element name="rule_value" type="xs:string"/>
      <xs:element name="error_message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Behavior Interface -->
  <xs:complexType name="behaviorInterface">
    <xs:sequence>
      <xs:element name="programming_paradigm" type="dop:programmingParadigm"/>
      <xs:element name="function_signatures" type="dop:functionSignatures"/>
      <xs:element name="oop_interface" type="dop:oopInterface"/>
      <xs:element name="adapter_configuration" type="dop:adapterConfig"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Programming Paradigm -->
  <xs:simpleType name="programmingParadigm">
    <xs:restriction base="xs:string">
      <xs:enumeration value="FUNCTIONAL"/>
      <xs:enumeration value="OOP"/>
      <xs:enumeration value="HYBRID"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Function Signatures -->
  <xs:complexType name="functionSignatures">
    <xs:sequence>
      <xs:element name="function" type="dop:functionSignature" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Function Signature -->
  <xs:complexType name="functionSignature">
    <xs:sequence>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="return_type" type="xs:string"/>
      <xs:element name="parameters" type="dop:parameterList"/>
      <xs:element name="is_pure_function" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Parameter List -->
  <xs:complexType name="parameterList">
    <xs:sequence>
      <xs:element name="parameter" type="dop:parameter" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Parameter -->
  <xs:complexType name="parameter">
    <xs:sequence>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="type" type="xs:string"/>
      <xs:element name="is_const" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <!-- OOP Interface -->
  <xs:complexType name="oopInterface">
    <xs:sequence>
      <xs:element name="class_name" type="xs:string"/>
      <xs:element name="methods" type="dop:methodList"/>
      <xs:element name="encapsulation_level" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Method List -->
  <xs:complexType name="methodList">
    <xs:sequence>
      <xs:element name="method" type="dop:method" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Method -->
  <xs:complexType name="method">
    <xs:sequence>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="visibility" type="xs:string"/>
      <xs:element name="is_virtual" type="xs:boolean"/>
      <xs:element name="function_ref" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Adapter Configuration -->
  <xs:complexType name="adapterConfig">
    <xs:sequence>
      <xs:element name="func_to_oop_enabled" type="xs:boolean"/>
      <xs:element name="oop_to_func_enabled" type="xs:boolean"/>
      <xs:element name="adapter_overhead_ms" type="xs:double"/>
      <xs:element name="conversion_cache_enabled" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Governance Configuration -->
  <xs:complexType name="governanceConfig">
    <xs:sequence>
      <xs:element name="gate_control_enabled" type="xs:boolean"/>
      <xs:element name="access_control_policy" type="xs:string"/>
      <xs:element name="audit_logging_enabled" type="xs:boolean"/>
      <xs:element name="isolation_boundaries" type="dop:isolationBoundaries"/>
      <xs:element name="compliance_validation" type="dop:complianceValidation"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Isolation Boundaries -->
  <xs:complexType name="isolationBoundaries">
    <xs:sequence>
      <xs:element name="memory_isolation" type="xs:boolean"/>
      <xs:element name="process_isolation" type="xs:boolean"/>
      <xs:element name="network_isolation" type="xs:boolean"/>
      <xs:element name="file_system_isolation" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Compliance Validation -->
  <xs:complexType name="complianceValidation">
    <xs:sequence>
      <xs:element name="dop_principles_enforced" type="xs:boolean"/>
      <xs:element name="immutability_verified" type="xs:boolean"/>
      <xs:element name="data_logic_separation_verified" type="xs:boolean"/>
      <xs:element name="transparency_verified" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Cryptographic Verification -->
  <xs:complexType name="cryptoVerification">
    <xs:sequence>
      <xs:element name="integrity_algorithm" type="xs:string"/>
      <xs:element name="signature_algorithm" type="xs:string"/>
      <xs:element name="key_management" type="dop:keyManagement"/>
      <xs:element name="verification_chain" type="dop:verificationChain"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Key Management -->
  <xs:complexType name="keyManagement">
    <xs:sequence>
      <xs:element name="public_key_path" type="xs:string"/>
      <xs:element name="private_key_path" type="xs:string"/>
      <xs:element name="key_rotation_enabled" type="xs:boolean"/>
      <xs:element name="key_expiration_timestamp" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Verification Chain -->
  <xs:complexType name="verificationChain">
    <xs:sequence>
      <xs:element name="verification_step" type="dop:verificationStep" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Verification Step -->
  <xs:complexType name="verificationStep">
    <xs:sequence>
      <xs:element name="step_name" type="xs:string"/>
      <xs:element name="verification_method" type="xs:string"/>
      <xs:element name="expected_result" type="xs:string"/>
      <xs:element name="dependency" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

</xs:schema>
